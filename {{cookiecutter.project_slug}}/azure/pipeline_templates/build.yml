
steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(pythonVersion)'
    displayName: 'Use Python $(pythonVersion)'

  - script: |
      pip install tomlq==0.1.0
      version_toml=$(tomlq -r '.tool.poetry.version' pyproject.toml)
      if [[ ! "$version_toml" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Version number in pyproject.toml is not in number.number.number format" >&2
          exit 1
      fi
    displayName: "Check version number format in  pyproject.toml"

  - script: |
      response=$(curl -u :$(System.AccessToken) -o /dev/null -w "%{http_code}" 'https://feeds.dev.azure.com/nluwv/BIAnalytics/_apis/packaging/Feeds/{{cookiecutter.repo_name}}/packages?api-version=7.1-preview.1')
      echo "TEST ${response}"
      if [ ${response} -ne 200 ]; then
        echo "Please create Artifacts feed with same name as repo"
        exit 1
      fi
    condition:
      eq(variables.PublishPackage, true)
    displayName: "Check if Artifacts feed exists"

  - script: |
      normalised_name=$(echo "{{cookiecutter.repo_name}}" | tr '[:upper:]' '[:lower:]' | sed 's/[^[:alnum:]]/-/g')
      version_toml=$(tomlq -r '.tool.poetry.version' pyproject.toml)
      response=$(curl -u :$(System.AccessToken) 'https://feeds.dev.azure.com/nluwv/BIAnalytics/_apis/packaging/Feeds/{{cookiecutter.repo_name}}/packages?api-version=7.1-preview.1' | jq '.value[] | select(.name == "'"$normalised_name"'" ) | .id')
      response=${response//\"/}
      versions_info=$(curl -u :$(System.AccessToken) "https://feeds.dev.azure.com/nluwv/BIAnalytics/_apis/packaging/Feeds/{{cookiecutter.repo_name}}/packages/$response/versions?%22api-version=7.1-preview.1%22")
      versions=($(jq -r '.value[].protocolMetadata.data.version' <<< "${versions_info}"))
      echo "Existing version are ${versions[@]}"
      for version in "${versions[@]}"
      do
          if [ "$version" = "${version_toml}" ]; then
              echo "${version_toml} exists in DevOps Artifacts feed" && exit 1
              break
          fi
      done
    condition:
      eq(variables.PublishPackage, true)
    displayName: "Check version number in Artifacts feed"

  - script: |
      pip install wheel
      pip install twine
      pip install poetry

    displayName: 'Install build dependencies'

  - script: |
      poetry build
    displayName: 'Build distribution'

  - task: TwineAuthenticate@1
    inputs:
      artifactFeed: BIAnalytics/{{cookiecutter.repo_name}}
    condition:
      eq(variables.PublishPackage, true)

  - script: |
      python -m twine upload -r "{{cookiecutter.repo_name}}" --config-file $(PYPIRC_PATH) dist/*.whl --verbose
    condition:
      and(eq(variables.isMain, true), eq(variables.PublishPackage, true))
    displayName: 'Artifacts feed upload'
